<?php
// Call System_DaemonTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "System_DaemonTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once 'System/Daemon.php';

/**
 * Test class for System_Daemon.
 * Generated by PHPUnit_Util_Skeleton on 2008-04-27 at 03:25:27.
 */
class System_DaemonTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("System_DaemonTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    public function testStart() {
        // Bare minimum setup
        $daemon                 = new System_Daemon("testdaemon", true);
        $daemon->appDir         = dirname(__FILE__);
        $daemon->logVerbosity   = 99; // so that the daemon can't log
        
        //$daemon->start();
        $this->assertEquals(true, $daemon->daemonInBackground());
        
        //$daemon->stop();        
    }

    public function testStop() {
        $daemon                 = new System_Daemon("testdaemon", true);
        $daemon->appDir         = dirname(__FILE__);
        $daemon->logVerbosity   = 99; // so that the daemon can't log
        
        //$daemon->start();
        
        //$daemon->stop();   
        $this->assertEquals(false, $daemon->daemonInBackground());
    }

    /**
     * @todo Implement testLog().
     */
    public function testLog() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testDaemonHandleSig().
     */
    public function testDaemonHandleSig() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testDaemonInBackground().
     */
    public function testDaemonInBackground() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testDaemonIsDying().
     */
    public function testDaemonIsDying() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }
}

// Call System_DaemonTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "System_DaemonTest::main") {
    System_DaemonTest::main();
}
?>
